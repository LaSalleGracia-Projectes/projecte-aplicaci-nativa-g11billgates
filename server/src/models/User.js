const userSchema = new mongoose.Schema({
    email: { type: String, required: true, unique: true },
    password: { type: String, required: true },
    name: { type: String, required: true },
    surname: { type: String, required: true },
    username: { type: String, required: true, unique: true },
    bio: { type: String, default: '' },
    gender: { type: String, required: true },
    birthDate: { type: Date, required: true },
    phoneNumber: { type: String },
    profileImage: { type: String },
    photos: [{ type: String }],
    videos: [{ type: String }],
    interests: [{ type: String }],
    blockedUsers: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],
    reportedUsers: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],
    matches: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Match' }],
    chats: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Chat' }],
    notifications: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Notification' }],
    likes: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Like' }],
    dislikes: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Dislike' }],
    reports: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Report' }],
    blocks: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Block' }],
    verification: { type: mongoose.Schema.Types.ObjectId, ref: 'Verification' },
    preferences: { type: mongoose.Schema.Types.ObjectId, ref: 'Preference' },
    location: { type: mongoose.Schema.Types.ObjectId, ref: 'Location' },
    createdAt: { type: Date, default: Date.now },
    updatedAt: { type: Date, default: Date.now }
}); 